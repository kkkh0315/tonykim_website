<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Tony Kim | Blog &amp; Portfolio</title>
    <link>https://kyoungwhankim.github.io/blog/</link>
    <description>Recent content in Blog on Tony Kim | Blog &amp; Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;copy; 2020 [Themefisher](https://themefisher.com) All Rights Reserved</copyright>
    <lastBuildDate>Tue, 15 Jun 2021 20:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://kyoungwhankim.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[3D 모델링] 모듈화를 통한 고딕 양식 건축물 만들기 (1) 프리 프로덕션</title>
      <link>https://kyoungwhankim.github.io/blog/gothic_architecture/</link>
      <pubDate>Tue, 15 Jun 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/gothic_architecture/</guid>
      <description>모듈 디자인이란? 모듈 디자인, 또는 모듈러 설계란 어떠한 시스템을 모듈이라는 작은 구성 요소로 세분(모듈화)하여 디자인 또는 설계하는 방식을 말합니다. 이러한 모듈들은 각각 개별적으로 제작되어 서로 교체되거나 추가, 생략되어 다양한 결과물을 만들어냅니다.</description>
    </item>
    
    <item>
      <title>42Seoul(42서울)을 마치며 쓰는 후기</title>
      <link>https://kyoungwhankim.github.io/blog/42seoul/</link>
      <pubDate>Wed, 09 Jun 2021 09:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/42seoul/</guid>
      <description>42Seoul 후기 안녕하세요. 저는 42Seoul 1기 2차 본과정생(카뎃) 김경환입니다. 이제 곧 구(舊)카뎃이 되겠네요.
42Seoul을 시작한 지 1여년만에 과정을 그만두기로 결정하였습니다. 42Seoul을 통해 프로그래밍을 접하고자 하는 분들에게 참고가 될 만한 내용과 제가 개인적으로 얻은 소중한 경험들을 공유하고자 간략하게 42Seoul 후기를 작성하고자 합니다.</description>
    </item>
    
    <item>
      <title>처음 3D 모델링 포트폴리오를 만든 소감</title>
      <link>https://kyoungwhankim.github.io/blog/first_portfolio/</link>
      <pubDate>Sat, 22 May 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/first_portfolio/</guid>
      <description>첫번째 3D 모델링 포트폴리오를 만들고&amp;hellip; 오토데스크의 Maya를 처음 다루기 시작한 지 딱 2년정도 되었습니다. 대학교 4학년 때 뒤늦게 영화 VFX를 해야겠다고 다짐하고 &amp;lsquo;Maya 학습 동아리&#39;도 꾸려서 운영하던 게 딱 2년 전 혜화동에서의 일입니다.</description>
    </item>
    
    <item>
      <title>색 관리 (3)선형 워크플로우(Linear Workflow) 완벽 이해</title>
      <link>https://kyoungwhankim.github.io/blog/color_linearworkflow/</link>
      <pubDate>Wed, 19 May 2021 10:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/color_linearworkflow/</guid>
      <description>색 관리 시리즈 링크 (1)표색계(COLOR SYSTEM)와 색도도(CHROMATICITY DIAGRAM) (2)색 공간(COLOR SPACE)
(3)선형 워크플로우(LINEAR WORKFLOW) 완벽 이해
선형 워크플로우(Linear Workflow) 선형 워크플로우(Linear Workflow), 혹은 리니어 워크플로우는 그래픽 작업 시 매우 중요한 개념입니다.</description>
    </item>
    
    <item>
      <title>OpenGL 삼각형 그리기 (3)Shader Program [OPENGL E08]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_triangle3/</link>
      <pubDate>Tue, 18 May 2021 21:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_triangle3/</guid>
      <description>OpenGL 시리즈 링크 OPENGL 소개: OPENGL, GLFW, GLEW란? [OPENGL E02]
OPENGL 설치: GLEW, GLFW 다운로드법과 VISUAL STUDIO에서 OPENGL 사용하기 [OPENGL E03]
OPENGL 창 만들기: OPENGL 기초 세팅[OPENGL E04]
OPENGL 삼각형 그리기 (1)VBO, VAO [OPENGL E05]</description>
    </item>
    
    <item>
      <title>OpenGL 삼각형 그리기 (2)Vertex Shader, Fragment Shader의 기초 [OPENGL E07]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_triangle2/</link>
      <pubDate>Mon, 17 May 2021 21:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_triangle2/</guid>
      <description>OpenGL 시리즈 링크 OPENGL 소개: OPENGL, GLFW, GLEW란? [OPENGL E02]
OPENGL 설치: GLEW, GLFW 다운로드법과 VISUAL STUDIO에서 OPENGL 사용하기 [OPENGL E03]
OPENGL 창 만들기: OPENGL 기초 세팅[OPENGL E04]
OPENGL 삼각형 그리기 (1)VBO, VAO [OPENGL E05]</description>
    </item>
    
    <item>
      <title>OpenGL 삼각형 그리기 (1)-2 코드 중간 정리 [OPENGL E06]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_triangle1_2/</link>
      <pubDate>Fri, 14 May 2021 21:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_triangle1_2/</guid>
      <description>OpenGL 시리즈 링크 OPENGL 소개: OPENGL, GLFW, GLEW란? [OPENGL E02]
OPENGL 설치: GLEW, GLFW 다운로드법과 VISUAL STUDIO에서 OPENGL 사용하기 [OPENGL E03]
OPENGL 창 만들기: OPENGL 기초 세팅[OPENGL E04]
OPENGL 삼각형 그리기 (1)VBO, VAO [OPENGL E05]</description>
    </item>
    
    <item>
      <title>Copying a UV map to multiple objects in Maya</title>
      <link>https://kyoungwhankim.github.io/blog/maya_uvcopy/</link>
      <pubDate>Sat, 01 May 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/maya_uvcopy/</guid>
      <description>How to copy a UV map to multiple duplicated objects at once with Python script in Maya When modeling objects, we duplicate an object multiple times and realize
&amp;lsquo;Oh, I forgot to unwrap the UV!</description>
    </item>
    
    <item>
      <title>색 관리 (2)색 공간(Color Space)</title>
      <link>https://kyoungwhankim.github.io/blog/color_space/</link>
      <pubDate>Sat, 10 Apr 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/color_space/</guid>
      <description>색 관리 시리즈 링크 (1)표색계(COLOR SYSTEM)와 색도도(CHROMATICITY DIAGRAM) (2)색 공간(COLOR SPACE)
(3)선형 워크플로우(LINEAR WORKFLOW) 완벽 이해
색 공간(Color Space) 색 공간(Color Space)은 색을 일정한 규칙으로 정리해둔 가상의 공간입니다. 색 마다 이름을 붙여서 정리할 수도 있고, 수학적 공간에 숫자로 정리할 수도 있습니다.</description>
    </item>
    
    <item>
      <title>색 관리 (1)표색계(Color System)와 색도도(Chromaticity Diagram)</title>
      <link>https://kyoungwhankim.github.io/blog/color_system/</link>
      <pubDate>Tue, 30 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/color_system/</guid>
      <description>색 관리 시리즈 링크 (1)표색계(COLOR SYSTEM)와 색도도(CHROMATICITY DIAGRAM) (2)색 공간(COLOR SPACE)
(3)선형 워크플로우(LINEAR WORKFLOW) 완벽 이해
RGB 컴퓨터 모니터 상의 색에 관해서 우리에게 가장 자주 노출되는 용어는 RGB입니다. 각각 Red, Green, Blue를 의미하는 RGB는 포토샵, Maya, 3DMax, 심지어 그림판에서도 볼 수 있습니다.</description>
    </item>
    
    <item>
      <title>색 관리(Color Management) 시리즈</title>
      <link>https://kyoungwhankim.github.io/blog/color_start/</link>
      <pubDate>Tue, 30 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/color_start/</guid>
      <description>ACES에서 시작된 색 공부 Renderman 공부를 하면서 ACES라는 새로운 시스템을 접하게 되었습니다. 특히, ACEScg에 대해 공부를 하려는데 관련해서 검색을 해보니 컴퓨터 그래픽스에서의 색에 관한 생경한 용어들이 마구 등장했습니다. &amp;lsquo;아 기초가 부족하구나&#39;하고 느꼈습니다.</description>
    </item>
    
    <item>
      <title>OpenGL 삼각형 그리기 (1)VBO, VAO [OPENGL E05]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_triangle1/</link>
      <pubDate>Tue, 23 Mar 2021 21:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_triangle1/</guid>
      <description>OpenGL 시리즈 링크 OPENGL 소개: OPENGL, GLFW, GLEW란? [OPENGL E02]
OPENGL 설치: GLEW, GLFW 다운로드법과 VISUAL STUDIO에서 OPENGL 사용하기 [OPENGL E03]
OPENGL 창 만들기: OPENGL 기초 세팅[OPENGL E04]
OPENGL 삼각형 그리기 (1)VBO, VAO [OPENGL E05]</description>
    </item>
    
    <item>
      <title>Renderman 스크래치 난 금속 만들기</title>
      <link>https://kyoungwhankim.github.io/blog/renderman_metal/</link>
      <pubDate>Fri, 19 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/renderman_metal/</guid>
      <description>금속에 다양한 텍스쳐 맵 입히기 Renderman의 PxrSurface을 활용해서 기본 금속 재질을 만들어보고, 스크래치 자국을 텍스쳐 맵을 이용하여 표현해보도록 하겠습니다.
PxrSurface의 Specular 우선 가장 기본적인 금속 재질은 PxrSurface의 Specular를 조정해서 만들 수 있습니다.</description>
    </item>
    
    <item>
      <title>Maya에서 Renderman 사용하기</title>
      <link>https://kyoungwhankim.github.io/blog/renderman_maya/</link>
      <pubDate>Tue, 16 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/renderman_maya/</guid>
      <description>Maya에서 Renderman 사용하는 법 Renderman을 설치했더라도 Maya에서 Renderman이 바로 보이지는 않는다. 플러그인 매니저에서 Renderman을 실행시켜보자.
 Windows -&amp;gt; Settings/Preferences -&amp;gt; Plug-in Manager 클릭  검색창에서 Renderman 검색 후 Renderman_for_Maya.py의 Loaded와 Auto Loaded 체크.</description>
    </item>
    
    <item>
      <title>Renderman 설치</title>
      <link>https://kyoungwhankim.github.io/blog/renderman_install/</link>
      <pubDate>Tue, 16 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/renderman_install/</guid>
      <description>Renderman Non-commercial 버전 Pixar는 비영리적인 목적으로 Renderman을 사용하고자 하는 고객들에게 프로그램을 무료로 제공합니다.
Renderman non-commerical 버전을 설치하는 법을 알아보겠습니다.
 renderman.pixar.com 으로 들어갑니다. Renderman | Pixar Try/Buy 메뉴로 들어갑니다.  Non-Commercial 섹션 Try 아래 TRY FOR FREE을 누릅니다.</description>
    </item>
    
    <item>
      <title>Renderman 공부 시작</title>
      <link>https://kyoungwhankim.github.io/blog/renderman_start/</link>
      <pubDate>Mon, 15 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/renderman_start/</guid>
      <description>Renderman Renderman은 Pixar Animation Studio(픽사 애니메이션 스튜디오)에서 제작한 3D 랜더링 프로그램입니다. 우리가 보는 디즈니 애니메이션 영화들이 Renderman으로 제작되는 대표적인 작품들입니다.
Maya와 Arnold만 쓰다가 다른 랜더링 프로그램으로 갈아타야겠다는 생각을 오래했습니다. 컴퓨터 그래픽스에 빠져 컴퓨터 공학 공부를 하느라 한 동안 가까이 하지 못했던 Maya를 다시 만지기 시작한 이상 새로운 랜더링 프로그램을 공부하자고 다짐했습니다.</description>
    </item>
    
    <item>
      <title>OpenGL 버전 확인법</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_version/</link>
      <pubDate>Sat, 13 Mar 2021 21:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_version/</guid>
      <description>OpenGL 버전 확인법 NVIDIA 그래픽 카드 사용하기 OpenGL 버전을 확인하기 전에 내가 사용하고 있는 그래픽 카드를 확인해야 합니다. 그래픽 카드 별로 탑재된 OpenGL 버전이 상이하기 때문입니다.
많은 컴퓨터들이 하나 이상의 그래픽 카드를 탑재하고 있습니다.</description>
    </item>
    
    <item>
      <title>OpenGL 창 만들기: OpenGL 기초 세팅[OPENGL E04]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_window/</link>
      <pubDate>Sat, 13 Mar 2021 21:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_window/</guid>
      <description>OpenGL 시리즈 링크 OPENGL 소개: OPENGL, GLFW, GLEW란? [OPENGL E02]
OPENGL 설치: GLEW, GLFW 다운로드법과 VISUAL STUDIO에서 OPENGL 사용하기 [OPENGL E03]
OPENGL 창 만들기: OPENGL 기초 세팅[OPENGL E04]
OPENGL 삼각형 그리기 (1)VBO, VAO [OPENGL E05]</description>
    </item>
    
    <item>
      <title>OpenGL 설치: GLEW, GLFW 다운로드법과 Visual Studio에서 OpenGL 사용하기 [OpenGL E03]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_install/</link>
      <pubDate>Thu, 11 Mar 2021 20:16:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_install/</guid>
      <description>OpenGL 시리즈 링크 OPENGL 소개: OPENGL, GLFW, GLEW란? [OPENGL E02]
OPENGL 설치: GLEW, GLFW 다운로드법과 VISUAL STUDIO에서 OPENGL 사용하기 [OPENGL E03]
OPENGL 창 만들기: OPENGL 기초 세팅[OPENGL E04]
OPENGL 삼각형 그리기 (1)VBO, VAO [OPENGL E05]</description>
    </item>
    
    <item>
      <title>OpenGL 소개: OpenGL, GLFW, GLEW란? [OpenGL E02]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_intro/</link>
      <pubDate>Wed, 10 Mar 2021 20:16:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_intro/</guid>
      <description>OpenGL 시리즈 링크 OPENGL 소개: OPENGL, GLFW, GLEW란? [OPENGL E02]
OPENGL 설치: GLEW, GLFW 다운로드법과 VISUAL STUDIO에서 OPENGL 사용하기 [OPENGL E03]
OPENGL 창 만들기: OPENGL 기초 세팅[OPENGL E04]
OPENGL 삼각형 그리기 (1)VBO, VAO [OPENGL E05]</description>
    </item>
    
    <item>
      <title>OpenGL 공부 시작 [OpenGL E01]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_start/</link>
      <pubDate>Sun, 07 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_start/</guid>
      <description>OpenGL 나의 첫 Graphics API, OpenGL
컴퓨터 그래픽스 공부를 시작하기 위해서 컴퓨터 공학 지식이 필요하다고 느꼈습니다.
2020년 3월부터 공부한 C언어를 시작으로 5월부터 진행한 42SEOUL로 어느 정도 컴퓨터 언어와 친숙해졌다고 생각이 들어 2020년 12월 말부터 저의 첫 Graphics API인 OpenGL 공부를 시작했습니다.</description>
    </item>
    
  </channel>
</rss>