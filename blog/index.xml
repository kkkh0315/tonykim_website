<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Tony Kim | Blog &amp; Portfolio</title>
    <link>https://kyoungwhankim.github.io/blog/</link>
    <description>Recent content in Blog on Tony Kim | Blog &amp; Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;copy; 2020 [Themefisher](https://themefisher.com) All Rights Reserved</copyright>
    <lastBuildDate>Tue, 30 Mar 2021 20:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://kyoungwhankim.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>색 관리 (1)표색계(Color System)와 색도도(Chromaticity Diagram)</title>
      <link>https://kyoungwhankim.github.io/blog/color_system/</link>
      <pubDate>Tue, 30 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/color_system/</guid>
      <description>RGB 컴퓨터 모니터 상의 색에 관해서 우리에게 가장 자주 노출되는 용어는 RGB입니다. 각각 Red, Green, Blue를 의미하는 RGB는 포토샵, Maya, 3DMax, 심지어 그림판에서도 볼 수 있습니다. 우리에게 당연히 빨간색은 RGB값이 (255, 0, 0)인 색입니다.</description>
    </item>
    
    <item>
      <title>색 관리(Color Management) 시리즈</title>
      <link>https://kyoungwhankim.github.io/blog/color_start/</link>
      <pubDate>Tue, 30 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/color_start/</guid>
      <description>ACES에서 시작된 색 공부 Renderman 공부를 하면서 ACES라는 새로운 시스템을 접하게 되었습니다. 특히, ACEScg에 대해 공부를 하려는데 관련해서 검색을 해보니 컴퓨터 그래픽스에서의 색에 관한 생경한 용어들이 마구 등장했습니다. &amp;lsquo;아 기초가 부족하구나&#39;하고 느꼈습니다.</description>
    </item>
    
    <item>
      <title>OpenGL 삼각형 그리기 (1)VBO, VAO [OPENGL E05]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_triangle1/</link>
      <pubDate>Tue, 23 Mar 2021 21:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_triangle1/</guid>
      <description>OpenGL 그래픽스 파이프라인(Graphics Pipeline) OpenGL로 표현하고자 하는 공간은 3차원이나 우리는 이를 2차원 화면을 통해 보게 됩니다.
따라서 3차원 좌표를 2차원 픽셀로 전환하는 과정이 필요하고 이를 그래픽스 파이프라인(Graphics Pipeline), 또는 렌더링 파이프라인(Rendering Pipeline)이라고 합니다.</description>
    </item>
    
    <item>
      <title>Renderman 스크래치 난 금속 만들기</title>
      <link>https://kyoungwhankim.github.io/blog/renderman_metal/</link>
      <pubDate>Fri, 19 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/renderman_metal/</guid>
      <description>금속에 다양한 텍스쳐 맵 입히기 Renderman의 PxrSurface을 활용해서 기본 금속 재질을 만들어보고, 스크래치 자국을 텍스쳐 맵을 이용하여 표현해보도록 하겠습니다.
PxrSurface의 Specular 우선 가장 기본적인 금속 재질은 PxrSurface의 Specular를 조정해서 만들 수 있습니다.</description>
    </item>
    
    <item>
      <title>Maya에서 Renderman 사용하기</title>
      <link>https://kyoungwhankim.github.io/blog/renderman_maya/</link>
      <pubDate>Tue, 16 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/renderman_maya/</guid>
      <description>Maya에서 Renderman 사용하는 법 Renderman을 설치했더라도 Maya에서 Renderman이 바로 보이지는 않는다. 플러그인 매니저에서 Renderman을 실행시켜보자.
 Windows -&amp;gt; Settings/Preferences -&amp;gt; Plug-in Manager 클릭  검색창에서 Renderman 검색 후 Renderman_for_Maya.py의 Loaded와 Auto Loaded 체크.</description>
    </item>
    
    <item>
      <title>Renderman 설치</title>
      <link>https://kyoungwhankim.github.io/blog/renderman_install/</link>
      <pubDate>Tue, 16 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/renderman_install/</guid>
      <description>Renderman Non-commercial 버전 Pixar는 비영리적인 목적으로 Renderman을 사용하고자 하는 고객들에게 프로그램을 무료로 제공합니다.
Renderman non-commerical 버전을 설치하는 법을 알아보겠습니다.
 renderman.pixar.com 으로 들어갑니다. Renderman | Pixar Try/Buy 메뉴로 들어갑니다.  Non-Commercial 섹션 Try 아래 TRY FOR FREE을 누릅니다.</description>
    </item>
    
    <item>
      <title>Renderman 공부 시작</title>
      <link>https://kyoungwhankim.github.io/blog/renderman_start/</link>
      <pubDate>Mon, 15 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/renderman_start/</guid>
      <description>Renderman Renderman은 Pixar Animation Studio(픽사 애니메이션 스튜디오)에서 제작한 3D 랜더링 프로그램입니다. 우리가 보는 디즈니 애니메이션 영화들이 Renderman으로 제작되는 대표적인 작품들입니다.
Maya와 Arnold만 쓰다가 다른 랜더링 프로그램으로 갈아타야겠다는 생각을 오래했습니다. 컴퓨터 그래픽스에 빠져 컴퓨터 공학 공부를 하느라 한 동안 가까이 하지 못했던 Maya를 다시 만지기 시작한 이상 새로운 랜더링 프로그램을 공부하자고 다짐했습니다.</description>
    </item>
    
    <item>
      <title>OpenGL 버전 확인법</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_version/</link>
      <pubDate>Sat, 13 Mar 2021 21:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_version/</guid>
      <description>OpenGL 버전 확인법 NVIDIA 그래픽 카드 사용하기 OpenGL 버전을 확인하기 전에 내가 사용하고 있는 그래픽 카드를 확인해야 합니다. 그래픽 카드 별로 탑재된 OpenGL 버전이 상이하기 때문입니다.
많은 컴퓨터들이 하나 이상의 그래픽 카드를 탑재하고 있습니다.</description>
    </item>
    
    <item>
      <title>OpenGL 창 만들기 [OPENGL E04]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_window/</link>
      <pubDate>Sat, 13 Mar 2021 21:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_window/</guid>
      <description>창(Window) 생성 GLFW
우선, GLFW와 GLEW를 include 해야합니다.
#include &amp;lt;GL/glew.h&amp;gt; #include &amp;lt;GLFW/glfw3.h&amp;gt; 
main 함수를 만들고 다음 코드들을 순서대로 작성합니다.
GLFW Init Window를 만드는 역할은 GLFW가 합니다. 따라서 GLFW를 init합니다.</description>
    </item>
    
    <item>
      <title>OpenGL 설치 [OpenGL E03]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_install/</link>
      <pubDate>Thu, 11 Mar 2021 20:16:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_install/</guid>
      <description>Visual Studio에서 GLFW와 GLEW, 그리고 OpenGL 사용하기 Visual Studio에서 OpenGL 작업 환경을 구축해보자.
Windows 환경에서 Visual Studio를 사용하여 OpenGL 함수들을 사용하기 위해선 준비 작업들이 있습니다.
Visual Studio 프로젝트 생성 우선, Visual Studio의 새 C++ 빈 프로젝트를 생성합니다.</description>
    </item>
    
    <item>
      <title>OpenGL 소개 [OpenGL E02]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_intro/</link>
      <pubDate>Wed, 10 Mar 2021 20:16:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_intro/</guid>
      <description>OpenGL이란? OpenGL이 정확히 무엇인지 알아보자.
OpenGL을 라이브러리라고 생각했습니다. 하지만 OpenGL은 설명서(Specification)와 같은 것입니다. 즉, 함수의 이름, 기능, 인자, 작동 방식 등이 설명된 API 규격입니다. OpenGL API 규격을 직접 확인하실 수 도 있습니다.</description>
    </item>
    
    <item>
      <title>OpenGL 공부 시작 [OpenGL E01]</title>
      <link>https://kyoungwhankim.github.io/blog/opengl_start/</link>
      <pubDate>Sun, 07 Mar 2021 20:00:00 +0900</pubDate>
      
      <guid>https://kyoungwhankim.github.io/blog/opengl_start/</guid>
      <description>OpenGL 나의 첫 Graphics API, OpenGL
컴퓨터 그래픽스 공부를 시작하기 위해서 컴퓨터 공학 지식이 필요하다고 느꼈습니다.
2020년 3월부터 공부한 C언어를 시작으로 5월부터 진행한 42SEOUL로 어느 정도 컴퓨터 언어와 친숙해졌다고 생각이 들어 2020년 12월 말부터 저의 첫 Graphics API인 OpenGL 공부를 시작했습니다.</description>
    </item>
    
  </channel>
</rss>